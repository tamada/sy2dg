{"ID":"3967","lecture-name":"ソフトウェア工学II","teacher-names":["青木　淳"],"grade":3,"credit":2,"outline":"【実務経験のある教員による授業科目】　この授業は、実務経験が豊富な教員が担当する。国内および国外でのコンピュータ・ネットワーク・システム開発の実務経験があり、特にプログラミングやソフトウェアデザインそしてプロジェクトマネジメントの経験が著しく、スーパープログラマ（伝説のプログラマ）という異名を持つ。日本のオブジェクト指向プログラミングおよびオブジェクト指向分析設計の創成期を作った。その経験をふんだんに活かしながら行う実践的なソフトウェア工学の授業である。　ソフトウェアの開発・運用・保守に対して、理工学（科学と工学）的な手法や技法の応用を促す。科学（サイエンス）で得られている知見をベースにして、実用的な手法や技法を発見し、工業的な生産活動や製品開発に応用する工学（エンジニアリング）の持ち味を、ソフトウェアに当てはめて解題してゆく。　この授業では、スマートフォンのようなICT（情報通信技術）を活用しながら行い、授業に援用するスライドなどの資料もすべて事前に電子的に配付される。それらの資料へのメモ書きなども電子的に（ペーパーレスで）行うことを強く推奨する。また、講義を視聴する（座学）だけでなく、触れる・試すなど、五感を使って参加・体験を促進する実習（ハンズオン方式のアクティブラーニング）を含む。　常にソフトウェアの品質を測定する（メトリクスを施す）ことを意識しながら、要求を分析し、要求仕様を作り、開発すべきシステムの基本設計と詳細設計のやり方、プログラミングとテストの仕方の手解きを行う。そして、開発・運用・保守に介在している現状の問題点を明らかにする。また、プログラミング言語に関する考現学としての側面も有する。　本科目を受講することで、実社会におけるソフトウェアの開発・運用・保守の活動に必要な事柄を一通りバランス良く習得することが講義の目的である。また、将来の職務（技術職・企画職・営業職・事務職などの職種を問わず）において、コンピュータを活用しながら業務の効率化や改善の役割を担う人になるための知識と技術そして技能を授けることも目的である。　同時にソフトウェア開発の厳しさや険しさの自覚を働きかける。人命にかかわるような、社会基盤にかかわるような、ミッションクリティカルと呼ばれる極めて重要なソフトウェアが多く存在する。けっして不具合を出して（バグって）はならないソフトウェアである。そのようなソフトウェア開発に長く（25年間以上も）携わってきた講師自らの実務経験を基にして、その勘どころ（知識・技術・技能の一端）を伝えて（垣間見せて）ゆく。＜CSE＞　　■前もってどのような科目の履修が望ましいか：　　　・応用プログラミング（Java／Python／C）　　　・ソフトウェア工学I　　　・プロジェクト演習　　　・アルゴリズムとデータ構造　　　・グラフィックスI　　　・ヒューマン・インタフェースI・II　　■今後どのような科目を履修するのに役立つか：　　　・プログラミング言語　　　・言語オートマトン　　　・分散処理システム　　　・グラフィックスII　　　・オペレーティングシステム　　　・特別研究におけるプログラミングやデザインなど＜ISE＞　　■前もってどのような科目の履修が望ましいか：　　　・応用プログラミング（Java／Python／C）　　　・ソフトウェア工学I　　　・プロジェクト演習　　　・アルゴリズムとデータ構造　　　・ヒューマンインタフェース　　■今後どのような科目を履修するのに役立つか：　　　・プログラミング言語　　　・言語オートマトン　　　・分散処理システム　　　・コンピュータグラフィックス　　　・オペレーティングシステム　　　・特別研究におけるプログラミングやデザインなど","special-notes":"　システムエンジニア（SE）などの情報系の職種を希望している者の履修を強く勧める。2年次の秋学期の「ソフトウェア工学I」を引き継ぐ授業であるが、その取得（未取得）に関わらず、良いソフトウェアをめざしたい、効率的にコストをかけずに高品質のソフトウェアを開発したい・運用したい・保守したいと望む者の履修を勧める。　毎回、各自のコンピュータを持参し、必ずネットワークに接続して、授業が始まる前までに稼働状態にしておくこと。講義中に援用するプログラムはネットワークを介して取得する。リポジトリ（SCM: Software Configuration Management、たとえばSubversionやGitなどのソフトウェア構成管理）もアクセスするので、その作法（マナー）に慣れること。","semester":"春学期"}
