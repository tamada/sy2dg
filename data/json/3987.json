{"ID":"","lecture-name":"プログラミング言語","teacher-names":["青木　淳"],"grade":3,"credit":2,"outline":"【実務経験のある教員による授業科目】　この授業は、実務経験が豊富な教員が担当する。国内および国外でのコンピュータ・ネットワーク・システム開発の実務経験があり、特にプログラミングやソフトウェアデザインそしてプロジェクトマネジメントの経験が著しく、スーパープログラマ（伝説のプログラマ）という異名を持つ。日本のオブジェクト指向プログラミングおよびオブジェクト指向分析設計の創成期を作った。その経験をふんだんに活かしながら行う本格的で実践的なプログラミング言語の授業である。　コンピュータを実際に動かす言語（たとえば機械語）と私たちがプログラミングに用いる言語（たとえばオブジェクト指向プログラミング言語）の間に大きな溝があることは周知であろう。その溝を埋めるために情報技術の粋が結集しており、コンピュータの発展の歴史が詰まっていると言っても過言ではない。　その粋な部分（言語処理系の内部）を学びながら、コマンドインタプリタ（たとえばシェル）やスクリプト言語（たとえばPythonやAppleScript）、そして、仮想化技術（たとえばSmalltalkやJavaの仮想マシン方式）などのモダンな言語処理系（および実行系）の構成方法を知ることが目的である。　また、1年次と2年次に学んできた手続きプログラミング（C言語）とオブジェクト指向プログラミング（Java言語）に加えて、論理プログラミングに基づく制約プログラミングと関数プログラミングについても学習する。様々なプログラミングのスタイルを垣間見ることで、新たなプログラミング言語やスタイルに出会ったときの咀嚼力と免疫力を向上させる。　本科目では、字句解析器（レクサ）や構文解析器（パーザ）の生成系（メタ系）を援用しながら、小さな言語処理系を自作するので、いままで学習してきたことの総決算（パノラマ）ができる。コンピュータに対するビジョン（鳥瞰した地図）とプログラミングの何たるか（メタプログラミングの視座）の会得も可能となる。　この授業では、スマートフォンのようなICT（情報通信技術）を活用しながら行い、授業に援用するスライドなどの資料もすべて事前に電子的に配付される。それらの資料へのメモ書きなども電子的に（ペーパーレスで）行うことを強く推奨する。また、講義を視聴する（座学）だけでなく、触れる・試すなど、五感を使って参加・体験を促進する実習（ハンズオン方式のアクティブラーニング）を含む。　同時にソフトウェア開発の厳しさや険しさの自覚を働きかける。人命にかかわるような、社会基盤にかかわるような、ミッションクリティカルと呼ばれる極めて重要なソフトウェアが多く存在する。けっして不具合を出して（バグって）はならないソフトウェアである。そのようなソフトウェア開発に長く（25年間以上も）携わってきた講師自らの実務経験を基にして、その勘どころ（知識・技術・技能の一端）を伝えて（垣間見せて）ゆく。　　■前もってどのような科目の履修が望ましいか：　　　・言語オートマトン　　　・応用プログラミング（Java／Python／C）　　　・ソフトウェア工学I・II　　　・プロジェクト演習　　　・アルゴリズムとデータ構造　　　・グラフィックスI・II　　　・ヒューマン・インタフェースI・II　　　・分散処理システム　　　・オペレーティングシステム　　■今後どのような科目を履修するのに役立つか：　　　・特別研究におけるプログラミングやデザインなど","special-notes":"　この授業と「言語オートマトン」を合わせて履修することが望ましい。1年次の「基礎プログラミング演習」と2年次の「発展プログラミング演習」「応用プログラミング（Java／Python／C）」「ソフトウェア工学I」、そして、3年次の春学期の「ソフトウェア工学II」「プロジェクト演習」で学んだことが活きる。システムエンジニア（SE）などの情報系の職種を希望している者の履修を強く勧める。　毎回、各自のコンピュータを持参し、必ずネットワークに接続して、授業が始まる前までに稼働状態にしておくこと。講義中に援用するプログラムはネットワークを介して取得する。リポジトリ（SCM: Software Configuration Management、たとえばSubversionやGitなどのソフトウェア構成管理）もアクセスするので、その作法（マナー）に慣れておくこと。","semester":"秋学期"}